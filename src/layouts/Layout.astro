---
// src/layouts/Layout.astro
interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "Tiendia.app - Transforma fotos de productos en im√°genes profesionales con IA"
} = Astro.props;

// Import global styles
import '@/styles/global.css';
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
  <head>
    
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/logoblanco.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO -->
    <title>{title}</title>
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/og-image.png" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="/og-image.png" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
  </head>
  <body class="min-h-screen bg-background font-sans antialiased">
    <!-- Theme provider script (for dark mode support) -->
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      
      const theme = getThemePreference();
      
      document.documentElement.classList[theme === 'dark' ? 'add' : 'remove']('dark');
      
      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        
        observer.observe(document.documentElement, { 
          attributes: true, 
          attributeFilter: ['class'] 
        });
      }
    </script>

    <main class="flex-1">
      <slot />
    </main>
    
    <!-- Custom scripts can be added here -->
  </body>
</html>